//Hey! Here's some of the information I've found and plan to use.

// Use API's:
// https://calendarific.com/holidays/2021/us
//      Remove filler words:
//          for, of, day, global, world, to, international, in, against, last, (Sunday, monday, etc.), the,
//      Grab first two words
//      Show pictures/urls for all upcoming holidays. Set option to specify date.
//
// https://developer.edamam.com/edamam-docs-recipe-api
// https://www.boredapi.com/


//With these API's, we'll have a user specify a date (default = that day). We'll return a holiday to observe, a recipe generated by holiday title as keywords for EDAMAM API, and then use the boredapi to generate a random suggested way to celebrate.
//On days with no holiday, the generator will present the closest holiday.
//Many days have more than one holiday, so it might be beneficial to present a specified number of the soonest approaching holidays, each with their own recipe and suggested activity.
//
//We could, of course, add more qualifiers for each of the API's, but these should start us with a good layout.
//
//I've looked over all of the api's pretty in depth. Hopefully by the time you get back onto the project, I'll have them implemented pretty well.






let host = "http://recipepuppy.com/api/";





//Begin HTML edit
document.getElementById("weatherSubmit").addEventListener("click", function(event) {
    //prevent empty submit
    event.preventDefault();
    const value = encodeURIComponent(document.getElementById("weatherInput").value);
    if (value === "") {
        return;
    }

    //FIXME testing
    console.log(value);

    const url = host + value;

    //FIXME reference
        // ",US&units=imperial" + "&APPID=f75947b71dcbbaa9114d001f2ad96abc";



    fetch(url)
        .then(function(response) {
            return response.json();
        }).then(function(json) {

            console.log(json);
            //formatting API response
            // let results = "";

//            //FIXME a for instance
//            results += '<h2>Weather in ' + json.name + "</h2>";

//            //icon - FIXME array for instance
//            for (let i=0; i < json.weather.length; i++) {
//                results += '<img src="http://openweathermap.org/img/w/'
//                    + json.weather[i].icon + '.png"/>';
//            }

//            //weather basics
//            results += "<p>"
//            for (let i=0; i < json.weather.length; i++) {
//                results += json.weather[i].main
//                if (i !== json.weather.length - 1)
//                    results += ", "
//            }
            // results += "</p>";

                        // document.getElementById("weatherResults").innerHTML = results;
        })
        .catch((error) => {console.error(error);} );

//    // Fetch forecast
//    const url = host + imagePath + input /*+ parameters*/ + subscriptionKey;


//    fetch(url2)
//        .then(function(response) {
//            return response.json();
//        }).then(function(json) {

//            console.log(json);

//            //formatting forecast
//            let forecast = "";
//            forecast += "</div>";

//            document.getElementById("forecastResults").innerHTML = forecast;

//        })
//        .catch((error) => {console.error(error);} );

});

